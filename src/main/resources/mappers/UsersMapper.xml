<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.choco.users.dao.UsersRepository">


	<select id="loginUsers" parameterType="com.choco.users.model.Users">
		SELECT USERS_ID, USERS_PWD
		 FROM USERS
		 WHERE USERS_ID = #{usersId} AND USERS_PWD = #{usersPwd}
	</select>

	<select id="findId" parameterType="com.choco.users.model.Users" resultType="String">
		SELECT 	USERS_ID   AS 	usersId
		FROM USERS
		WHERE USERS_NAME = #{usersName} AND USERS_NICKNAME = #{usersNickname}
		AND USERS_BIRTHDATE = TO_DATE(#{usersBirthdate}, 'YY-MM-DD')
	</select>
	
	<select id="findPwd" parameterType="com.choco.users.model.Users" resultType="String">
		SELECT 	USERS_PWD   AS 	usersPwd
		FROM USERS
		WHERE USERS_ID = #{usersId} AND USERS_NAME = #{usersName}
		AND USERS_BIRTHDATE = TO_DATE(#{usersBirthdate}, 'YY-MM-DD')
	</select>


	<insert id="insertUsers" parameterType="com.choco.users.model.Users">
		INSERT INTO USERS (
			<if test="usersProfileBytes != null">
				USERS_PROFILE, 
			</if>
			USERS_ID, USERS_PWD, USERS_NAME, USERS_BIRTHDATE, USERS_NICKNAME, USERS_EMAIL)
		VALUES (
			<if test="usersProfileBytes != null">
				#{usersProfileBytes}, 
			</if>
			#{usersId}, #{usersPwd}, #{usersName},
			TO_DATE(#{usersBirthdate}, 'YY-MM-DD'), #{usersNickname}, #{usersEmail})
	</insert>

	<select id="getUsersList" resultType="com.choco.users.model.Users">
		SELECT *
		FROM USERS
	</select>
	
	<select id="getIdList" resultType="String">
		SELECT USERS_ID
		FROM USERS
	</select>
	
	<select id="IdCheck" parameterType="String">
		SELECT USERS_ID
		FROM USERS
		WHERE USERS_ID = #{usersId}
	</select>
	
	<select id="NicknameCheck" parameterType="String">
		SELECT USERS_NICKNAME
		FROM USERS
		WHERE USERS_NICKNAME = #{usersNickname}
	</select>
	
	<select id="EmailCheck" parameterType="String">
		SELECT USERS_EMAIL
		FROM USERS
		WHERE USERS_EMAIL = #{usersEmail}
	</select>
	
	<select id="getUsersInfo" parameterType="String" resultType="com.choco.users.model.Users">
		SELECT 	USERS_PROFILE 									AS 	usersProfileBytes,
				USERS_ID 										AS 	usersId,
				USERS_PWD 										AS 	usersPwd,
				USERS_NAME 										AS 	usersName,
				TO_CHAR(USERS_BIRTHDATE, 'YYYY-MM-DD') 			AS 	usersBirthdate,
				USERS_NICKNAME									AS	usersNickname,
				USERS_EMAIL										AS	usersEmail
		FROM USERS
		WHERE USERS_ID = #{usersId}
	</select>

	<update id="reviseUsers" parameterType="com.choco.users.model.Users">
		UPDATE USERS
		SET
			USERS_PWD = #{usersPwd},
			USERS_NICKNAME = #{usersNickname}
			<if test="usersProfileBytes != null">
				, USERS_PROFILE = #{usersProfileBytes}
			</if>
		WHERE USERS_ID=#{usersId}
	</update>

	<select id="getUsersId" parameterType="String">
		SELECT USERS_ID
		FROM USERS
		WHERE USERS_ID = #{usersId}
	</select>
	
	<!-- 회원 탈퇴를 위한 SQL -->
	<delete id="deleteUsers" parameterType="String">
    	DELETE FROM USERS 
    	WHERE USERS_ID = #{usersId}
	</delete>
	
	
	<select id="getUsersCount" resultType="int">
		SELECT COUNT(*) FROM USERS
	</select>	
	
	<select id="getUsersName" parameterType="String" resultType="String">
		SELECT USERS_NAME FROM USERS
		WHERE USERS_ID=#{usersId}
	</select>
	
</mapper>