<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.choco.users.dao.UsersRepository">

	<select id="loginUsers" parameterType="com.choco.users.model.Users">
		SELECT USERS_ID, USERS_PWD
		 FROM USERS
		 WHERE USERS_ID = #{usersId} AND USERS_PWD = #{usersPwd}
	</select>

	<select id="findId" parameterType="com.choco.users.model.Users" resultType="String">
		SELECT 	USERS_ID   AS 	usersId
		FROM USERS
		WHERE USERS_NAME = #{usersName} AND USERS_NICKNAME = #{usersNickname}
		AND USERS_BIRTHDATE = TO_DATE(#{usersBirthdate}, 'YY-MM-DD')
	</select>
	
	<select id="findPwd" parameterType="com.choco.users.model.Users" resultType="String">
		SELECT 	USERS_PWD   AS 	usersPwd
		FROM USERS
		WHERE USERS_NAME = #{usersName} AND USERS_NAME = #{usersName}
		AND USERS_BIRTHDATE = TO_DATE(#{usersBirthdate}, 'YY-MM-DD')
	</select>


	<insert id="insertUsers" parameterType="com.choco.users.model.Users">
		INSERT INTO USERS (
			USERS_PROFILE, USERS_ID, USERS_PWD, USERS_NAME, USERS_BIRTHDATE, USERS_NICKNAME, USERS_EMAIL)
		VALUES (
			#{usersProfileBytes}, #{usersId}, #{usersPwd}, #{usersName},
			TO_DATE(#{usersBirthdate}, 'YY-MM-DD'), #{usersNickname}, #{usersEmail})
	</insert>

	<select id="getUsersList" resultType="com.choco.users.model.Users">
		SELECT *
		FROM USERS
	</select>
	
	<select id="getIdList" resultType="String">
		SELECT USERS_ID
		FROM USERS
	</select>

	<select id="checkId" parameterType="String" resultType="boolean">
		SELECT COUNT(*) > 0
		FROM USERS
		WHERE USERS_ID=#{usersId}
	</select>
	
	<select id="getIdCheck" parameterType="String" resultType="int">
		SELECT
			if(COUNT(USERS_ID) > 0, 1, 0)
		FROM USERS
		WHERE USERS_ID=#{inputId};
	</select>





	
	
	<select id="getUsersCount" resultType="int">
		SELECT COUNT(*) FROM USERS
	</select>	
	
	<select id="getUsersName" parameterType="String" resultType="String">
		SELECT USERS_NAME FROM USERS
		WHERE USERS_ID=#{usersId}
	</select>	
	
	
	
	
	<!-- 
	<select id="getEmpCount" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM EMPLOYEES
		<if test="deptid != null">
			 WHERE DEPARTMENT_ID = #{deptid}
		</if>
	</select>
	


	<update id="updateEmp" parameterType="app.labs.ex05.mybatis.model.Emp">
		UPDATE EMPLOYEES 
		SET FIRST_NAME=#{firstName}, LAST_NAME=#{lastName}, SALARY=#{salary} 
		WHERE EMPLOYEE_ID=#{employeeId}
	</update>
	
	<delete id="deleteEmp">
		DELETE FROM EMPLOYEES 
		WHERE EMPLOYEE_ID=#{empid} AND EMAIL=#{email}
	</delete>
	
	<delete id="deleteJobHistory" parameterType="int">
		DELETE FROM JOB_HISTORY 
		WHERE EMPLOYEE_ID=#{empid}
	</delete>
	
	<select id="getAllJobId" resultType="hashmap">
		SELECT JOB_ID AS "jobId", JOB_TITLE AS "title" FROM JOBS
	</select>
	
	<select id="getAllManagerId" resultType="hashmap">
		SELECT 
			D.MANAGER_ID AS "managerId", 
			E.FIRST_NAME AS "firstName" 
		FROM DEPARTMENTS D JOIN EMPLOYEES E 
			ON D.MANAGER_ID = E.EMPLOYEE_ID
		ORDER BY D.MANAGER_ID
	</select>
	
	<select id="getAllDeptId" resultType="hashmap">
		SELECT 
			DEPARTMENT_ID AS "departmentId", 
			DEPARTMENT_NAME AS "departmentName" 
		FROM DEPARTMENTS
	</select>
	 -->
	
</mapper>